<launch>
    <!-- Launch Gazebo Simulation -->
	<arg name="world" default="$(find prometheus_gazebo)/worlds/walk.world"/>
	<arg name="sdf" default="$(find prometheus_gazebo)/models/iris_realsense_camera/iris_realsense_camera.sdf"/>
	<arg name="model" default="iris"/>
    <include file="$(find prometheus_gazebo)/launch/sitl.launch">
	  <arg name="world" value="$(arg world)"/>
	  <arg name="sdf" value="$(arg sdf)"/>
    </include>

  <!-- Define a static transform from a camera internal frame to the fcu for every camera used -->
  <node pkg="tf" type="static_transform_publisher" name="tf_realsense_camera"
          args="0 0 0 -1.57 0 -1.57 base_link realsense_camera_link 10"/>

    <!-- Ros transformation -->
    <node pkg="tf" type="static_transform_publisher" name="tf_local_origin"
          args="0 0 0 0 0 0 world odom 10"/>
    
    <!-- run the kcf_tracker.cpp -->
    <node pkg="prometheus_detection" type="kcf_tracker" name="kcf_tracker" output="screen">
        <param name="camera_topic" type="string" value="/realsense_plugin/camera/color/image_raw" />
        <param name="camera_info" type="string" value="camera_param_gazebo_realsense.yaml" />
    </node>

	<!-- run the object_tracking.cpp -->
	<node pkg="prometheus_mission" type="object_tracking" name="object_tracking" output="screen" launch-prefix="gnome-terminal --">
		<rosparam command="load" file="$(find prometheus_mission)/object_tracking/object_tracking.yaml" />	
	</node>

	<!-- run the terminal_control.cpp -->
	<node pkg="prometheus_control" type="terminal_control" name="terminal_control" output="screen" launch-prefix="gnome-terminal --">	
		<rosparam command="load" file="$(find prometheus_control)/launch/terminal_control.yaml" />
	</node>

</launch>
