#!/usr/bin/env python
PACKAGE = "prometheus_control"

from dynamic_reconfigure.parameter_generator_catkin import *

# 创建一个动态参数生成器，后面就可以往该变量中添加可以动态配置的参数。
gen = ParameterGenerator()

# geometric_controller
# 第一个参数代表是该可配置动态参数名，是一个字符串形式;第二个参数表示参数的数据类型;第三个参数表示需要传入参数动态配置回调函数中的掩码，在回调函数中会修改所有参数的掩码，表示参数已经进行修改，一般都是设置为0；第四个参数表示对该参数的说明描述;第五个参数表示参数设置的默认值;第六个参数表示参数可以设置的最小值;最后一个参数表示可设置的参数的最大值;
gen.add("Kp_xy",    float_t,    0, "Kp_xy", 7.0,  1.0, 8.0)
gen.add("Kp_x",    double_t,    0, "Proportional gain for X position error", 8.0,  1.0, 20.0)
gen.add("Kp_y", double_t, 0, "Proportional gain for Y position error", 8.0, 1.0, 20.0)
gen.add("Kp_z", double_t, 0, "Proportional gain for Z position error", 10.0, 1.0, 20.0)
gen.add("Kv_x",    double_t,    0, "Proportional gain for X velocity error", 1.5,  1.0, 20.0)
gen.add("Kv_y", double_t, 0, "Proportional gain for Y velocity error", 1.5, 1.0, 20.0)
gen.add("Kv_z", double_t, 0, "Proportional gain for Z velocity error", 3.3, 1.0, 20.0)

# 用于生成所有C++和Python相关的头文件并且退出程序，这里第二个参数表示动态参数运行的节点名，第三个参数是生成文件所使用的前缀，需要和配置文件名相同，不要带后面的.cfg后缀，这样根据该配置文件就会生成dynamicConfig.h的头文件，后面在cpp的源码中可以直接引用。
exit(gen.generate(PACKAGE, "prometheus_control", "dynamic_param"))
